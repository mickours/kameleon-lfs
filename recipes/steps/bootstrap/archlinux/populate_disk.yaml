# Populate disk
#
# This step is partionning and populating the disk

- partition_disk:
  - check_cmd_out: parted
  - exec_out: |
      echo "Partitioning disk..."
      parted $${device} mklabel msdos
      parted $${device} mkpart primary 0% 100%
      parted $${device} set 1 boot on
  - exec_out: |
      echo Creating root partition...
      mkfs.$$filesystem_type -q $${device}p1 || fail cannot create / ext4

- mount_mountdir:
  - on_checkpoint: redo
  - exec_out: mkdir -p $$mountdir
  - exec_out:  "echo Mounting root partition... ;  mount $${device}p1 $$mountdir || fail cannot mount /"
  - on_export_clean:
    - exec_out: "echo try umount $$mountdir... ; mountpoint -q $$mountdir && umount -f -l $$mountdir || true"

- copy_rootfs:
  - check_cmd_out: rsync
  - exec_out: rsync -aAX $$rootfs_cache/* $$rootfs
  - exec_out: echo "sync..." ; sync

- create_fstab:
  - write_out:
    - $$mountdir/etc/fstab
    - |
      # /etc/fstab: static file system information.
      #
      # Use 'blkid' to print the universally unique identifier for a
      # device; this may be used with UUID= as a more robust way to name devices
      # that works even if disks are added and removed. See fstab(5).
      #
      # <file system> <mount point>   <type>  <options>       <dump>  <pass>
      UUID=`blkid -s UUID -o value $${device}p1` /               $$filesystem_type    errors=remount-ro  0       1
